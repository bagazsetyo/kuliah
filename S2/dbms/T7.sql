-- create table penjualan
create table penjualan (
    KODE_PENJUALAN CHAR(6) NOT NULL,
    KODE_BARANG CHAR(6) NOT NULL,
    KODE_CUSTOMER CHAR(6) NOT NULL,
    JUMLAH_PENJUALAN NUMBER(38),
    PRIMARY KEY(KODE_PENJUALAN),
    FOREIGN KEY(KODE_BARANG) REFERENCES BARANG(KODE_BARANG),
    FOREIGN KEY(KODE_CUSTOMER) REFERENCES CUSTOMER(KODE_CUSTOMER)
) 

-- create 10 data 
-- B001
-- B002
-- B003
-- B004

-- C001
-- C002
-- C003
-- C004
-- C005
-- C006

INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ001', 'B001', 'C001', 1)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ002', 'B002', 'C001', 2)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ003', 'B003', 'C001', 4)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ004', 'B004', 'C001', 1)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ005', 'B001', 'C002', 3)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ006', 'B002', 'C003', 7)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ007', 'B003', 'C004', 4)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ008', 'B004', 'C005', 5)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ009', 'B001', 'C006', 4)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ010', 'B002', 'C002', 4)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ011', 'B003', 'C003', 10)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ012', 'B004', 'C004', 8)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ013', 'B001', 'C001', 8)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ014', 'B002', 'C003', 8)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ015', 'B003', 'C004', 8)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ016', 'B004', 'C005', 8)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ017', 'B001', 'C001', 8)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ018', 'B002', 'C002', 8)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ019', 'B003', 'C004', 8)
INSERT INTO penjualan (KODE_PENJUALAN, KODE_BARANG, KODE_CUSTOMER, JUMLAH_PENJUALAN) VALUES
('PJ020', 'B004', 'C005', 8)

-- SHOW HOW MANY BUYING EACH CUSTOMER ON 
SELECT KODE_BARANG as KD_BARANG, KODE_CUSTOMER as KD_CUSTOMER, count(*) as total 
FROM PENJUALAN
group by KODE_BARANG, KODE_CUSTOMER

-- add column tanggal_pasok on table PASOK with default now  
alter table PASOK add tanggal_pasok date default now();

-- no 2 
select * 
from pasok
join barang on pasok.KODE_BARANG = barang.KODE_BARANG

-- NO 3
SELECT KODE_SUPLIER AS "Kode Suplier", COUNT(*) AS "Jumlah Pemasokan", SUM(JUMLAH_PASOK) AS "Jumlah Pasok"
from pasok
WHERE KODE_SUPLIER = 'S002'
GROUP BY KODE_SUPLIER

UNION 

SELECT KODE_SUPLIER AS "Kode Suplier", COUNT(*) AS "Jumlah Pemasokan", SUM(JUMLAH_PASOK) AS "Jumlah Pasok"
from pasok
WHERE KODE_SUPLIER = 'S003'
GROUP BY KODE_SUPLIER


-- NO 4 
SELECT KODE_BARANG, KODE_SUPLIER
FROM PASOK
WHERE JUMLAH_PASOK >= 4

INTERSECT

SELECT KODE_BARANG, KODE_SUPLIER
FROM PASOK
WHERE JUMLAH_PASOK >= 4;


-- no 5 
SELECT KODE_BARANG AS "Kode Barang", COUNT(*) as "Banyak Pemasokan", SUM(JUMLAH_PASOK) as "Jumlah Pemasukan"
FROM pasok
GROUP BY KODE_BARANG
HAVING SUM(JUMLAH_PASOK) >= 1
MINUS
SELECT KODE_BARANG AS "Kode Barang", COUNT(*) as "Banyak Pemasokan", SUM(JUMLAH_PASOK) as "Jumlah Pemasukan"
FROM pasok
GROUP BY KODE_BARANG
HAVING SUM(JUMLAH_PASOK) >= 15